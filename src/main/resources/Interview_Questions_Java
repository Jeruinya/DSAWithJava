Interview Questions----------->Core java
                           ===================

Question-1:what is diff between abstract class and interface?.when we should go for abstract class & when inteface?

Question-2:what is siarialization & deserialization? What is the rule for serialization?
         If super class does not implements serializable interface and sub class implements
         and we are serializing sub class then wath will happen?
         write program to serialize and deserialize an object.

Question-3:what is diff between Array and ArrayList,ArrayList & Vector, HashMap & Hashtable,Comparable & Comparatore?

Question-4:Tell me the internal working of HashMap(very frequent asked ques) , Treeset, HashSet, TreeMap.

Question-5:overloading and overrriding (they will ask by givinig different different conditions like if child class 
            throws checked exception then what should throw  the parent method etc read well both with example and scenario)

Question-6:what are the features of java5,java6,java7 & java8 ?

Question-7:what is try with resource?. what is multiple catch block?.why finaly block is given.how try with resource eliminates
           the requirement of finally block.
Question-8:How we are achieving abstraction in java ?

Question-9:what is cohesion and coupling ?

Question-10:what is ConccurentHashMap? what is the diff betweeb HashMap & ConcurrentHashMap?

Question-11:what is the diff between fail-fast and fail-safe iterator?

Question-12:what is inner class? tell purpose and differnt types of inner classes? what is annonymous inner class?

Question-13:what is syncronization? how many types of lock are there?what is syncronized block? what is diff btw syncronized method & syncronized block?

Question-14:what is RadWriteLock?

Question-15:what are differnt memories in java? what is class loader sub system?

Question-16:what is difference btw string & stringBuffer?what is SCP?what is mutability & immutability? and many more programmatic ques on string.

Question-17:how to make a class as immutable?

Question-18:what is singleton class? how to make a class as singleton?

Question-19:what is contract btw hashCode() & equals() method?

Question-20:what diff btw == & equals() method?

Question-21:how you will override equals() method?

Question-22:what is data hiding? how we will achieve it ?

Question-23:what is generic class? why we use generics?

Question 24: How Hash collision handled in java stream?---->https://www.nagarro.com/en/blog/post/24/performance-improvement-for-hashmap-in-java-8
Question 25: How to maintain the indexing in set?
Ans:      Using an array------------>create array with size set and convert set to array------String[] arr = set.toArray(new String[set.size()]);
	    Using a for loop
	    Using ArrayList------>List<String> list = new ArrayList<String>(set);
Question 25: How locking mechanism handled in ConcurrentHashMap?----

Question 26. When Threads Are Not Lightweight Process In Java?
Answer :Threads are lightweight process only if threads of same process are executing concurrently. 
	  But if threads of different processes are executing concurrently then threads are heavy weight process.

Question 27 : How priorityQueue works internall?


=======================================================================================================
                   Programs
               =========================

WAP to find number of occurrences of each character in a string?

import java.util.Scanner;

public class CountingOccurences {
public static void main(String[] args){

    String s ="aaabbbbccccccdd";
    String result="";
    StringBuilder sb = new StringBuilder(s);
    while(sb.length() != 0){
        int count = 0;
        char test = sb.charAt(0);
        while(sb.indexOf(test+"") != -1){
            sb.deleteCharAt(sb.indexOf(test+""));
            count++;
			
        }
        //System.out.println(test+" is repeated "+count+" number of times");
        //result=result+test+count;
		System.out.print(test+"= "+count);
    }
             
}
}

WAP to find common elements from list?

import java.util.List;
import java.util.ArrayList;
class CommmonElementIAL 
{
	public static void main(String[] args) 
	{
		List l1=new ArrayList();
		l1.add(10);
		l1.add(20);
		l1.add(30);
		List l2= new ArrayList();
		l2.add(10);
		l2.add(20);
		l2.add(90);
		List l3=new ArrayList(l2);
		l3.retainAll(l1);
		System.out.println(l3);
	}
}


WAP to sort 1 million number btw 0 to 9.

import java.util.*;
class Buearo 
{
	public static void main(String[] args) 
	{
		ArrayList l= new ArrayList();
		l.add(0);
		l.add(1);
		l.add(2);
		l.add(3);
		l.add(4);
		l.add(1);
		l.add(0);
		l.add(0);
		l.add(2);
		l.add(2);
		l.add(6);
		l.add(9);
		l.add(9);
		l.add(6);
		l.add(4);
		l.add(8);
		System.out.println(l);
		Collections.sort(l);
		System.out.println(l);
	}
}



WAP to print abbrevation of a string like if Panjab National Bank then print P.N.B

import java.io.*;
import java.util.Scanner;
class CyberQ
{
public static void main(String args[])throws IOException
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
Scanner sn= new Scanner(System.in);
String s;
char x;
int l;
System.out.print("Enter any sentence: ");
s=br.readLine();

System.out.println(s);
s=" "+s; //adding a space infront of the inputted sentence or a name
s=s.toUpperCase(); //converting the sentence into Upper Case (Capital Letters)
l=s.length(); //finding the length of the sentence</span>
System.out.print("Output = ");
 
for(int i=0;i<l;i++)
{
x=s.charAt(i); //taking out one character at a time from the sentence
if(x==' ') //if the character is a space, printing the next Character along with a fullstop
System.out.print(s.charAt(i+1)+".");
}
}
}



WAP to reverse a string.

import java.util.Scanner;

class ReversingString 
{
	public static void main(String[] args) 
	{
		Scanner s=new Scanner(System.in);
		System.out.println("Enter any string:");
		String str=s.next();
		reverse(str);

	}
	public static void reverse(String s)
	{
		char[]c=s.toCharArray();
		String revStr="";
		for(int i=c.length-1;i>=0;i--)
		{
			revStr+=c[i];
		}
		System.out.println("The reversed string is:"+revStr);
	}
}


WAP to reverse a sentence.

import java.util.Scanner;
class SentenceRev
{
	public static void main(String args[]) 
	{


         String str="state bank of India";
		// Scanner s=new Scanner(System.in);
		 //System.out.println("Enetr any sentence :");
		 //str=s.next();
         String revStr = reverseWordByWord(str);
		 System.out.println(revStr);
	}


 public static  String reverseWordByWord(String str){
        int strLeng = str.length()-1;
        String reverse = "", temp = "";

        for(int i = 0; i <=strLeng; i++){
            temp += str.charAt(i);
            if((str.charAt(i) == ' ') || (i == strLeng)){
                for(int j = temp.length()-1; j >= 0; j--){
                    reverse += temp.charAt(j);
                    if((j == 0) && (i != strLeng))
                        reverse += " ";
                }
                temp = "";
            }
        }
        return reverse;
    }
}



WAP to find factorial of a number using recurssion

class RecurssionFactorial 
{
	public static void main(String[] args) 
	{
		int n=7;
		int res=factorial(n);
		System.out.println("Result="+res);
	}
	public static int factorial(int n)
	{
		if(n<=0)
			return 1;
		else
			return n*factorial(n-1);
}
}



WAP to read file date and store into any collection.

import java.util.*;
import java.io.*;
class ReadingFile 
{
	public static void main(String[] args) throws Exception
	{
		HashSet a = new HashSet(); 
         Scanner s = new Scanner(new File("E:\\programs\\imp_programs\\file.txt"));

          while(s.hasNextLine()) {
           String nextLine = s.nextLine();
          a.add(nextLine);
		  }
		  s.close();
		  System.out.println(a);
		  }
	}


WAP to find no of digits.

import java.util.Scanner;
class NumberOfDigits 
{
	public static void main(String[] args) 
	{
		int count=0;

		Scanner s=new Scanner(System.in);
		System.out.println("Enter any number:");
		long l=s.nextLong();
		while(l>0)
		{
			l=l/10;
			count++;
		}

		System.out.println(count);
	}
}


WAP to override equals() method

class OverridindEqualsMethod 
{
	String name;
	int rollno;
	String add;
   OverridindEqualsMethod(String name, int rollno,String add) {
	   this.name=name;
	   this.rollno=rollno;
	   this.add=add;
   }
   public boolean equals(Object obj) {
	   try{

	   OverridindEqualsMethod o=(OverridindEqualsMethod)obj;
	   if(name.equals(o.name)&& rollno==o.rollno && add.equals(o.add))
		   return true;
		   else
			   return false;
	   }
	   catch(ClassCastException e)
		   {
		   return false;
		   }
	  catch(NullPointerException e1)
	   {
		  return false;
	   }
   }


	public static void main(String[] args) 
	{
		OverridindEqualsMethod a1=new OverridindEqualsMethod("ram",101,"delhi");
		OverridindEqualsMethod a2=new OverridindEqualsMethod("ram",101,"delhi");

		System.out.println(a1.equals(a2));
	}
}


WAP to make a class as immutable.


final class Immutable
{
	 private final String name;
	 private final int rollno;


   Immutable(String name , int rollno) {
	   this.name=name;
	   this.rollno=rollno;
   }
   public Immutable modify(String name , int rollno) {
	   if(this.name==name && this.rollno==rollno)
	   
		   return this;
		   else
			   return (new Immutable(name,rollno));
   }
   public static  void main(String args[]){
	   Immutable e1=new Immutable("ram",1001);
	   Immutable e2=e1.modify("raju",2001);
	   Immutable e3=e1.modify("ram",1001);
	   Immutable e4=e2.modify("raju",2001);
	   System.out.println(e1+" "+e2+"   "+e3+"    "+e4);

   }

}



What will be the output.


class Innodata 
{
	public static void main(String[] args) 
	{
		int []a=new int[10];
		for(int i=0;i<10;i++)
		{
			a[i]=i;
		System.out.println(a[i]);
		}
	}
}



What will be the output.

import java.util.Scanner;
class Innodata1 
{
	public static void main(String[] args) 
	{
		try
		{
			double d =15.0;
			System.out.println(d/0);
		}
		catch (ArithmeticException ae)
		{
		}
	}
}

What will be the output.

import java.util.ArrayList;
class Infogain 
{
	public static void main(String[] args) 
	{
		ArrayList al=new ArrayList();
		al.add(1);
		al.add(2);
		al.add(3);
		al.add(4);
		al.add(5);
		al.add(6);
		al.add(7);
		al.add(8);
		al.add(9);
		al.add(10);
		System.out.println(al.size());
		System.out.println(al);
		for(int i=0;i<al.length;i++)
		{
			al.remove(i);
		}
		System.out.println(al);
	}
}

What will be the output.


class Infogain1 
{
	public static void main(String[] args) 
	{
		String s="hi";
		String s1=new String("hi");
		System.out.println(s==s1);
		System.out.println(s.equals(s1));
	}
}


What will be the output.

class Infogain2 
{
	public void show(String s)
	{
		System.out.println("Hello !");
	}
	public void show(Integer i)
	{
		System.out.println("Hi");
	}

	public static void main(String[] args) 
	{
	    Infogain2 i=new Infogain2();
		i.show(null);
	}
}

What will be the output.


import java.util.*;
class  LinchPin1
{
	public static void main(String[] args) 
	{
		ArrayList l= new ArrayList();
		l.add(10);
		l.add(8);
		l.add(9);
		l.add(78);
		l.add(20);
	   System.out.println(l);
	   TreeSet t = new TreeSet(l);
	   System.out.println(t);
	}
}


WAP to print this pattern( i am giving the code for all the pattern which i faced)

1---

*       * 
 *     *  
  *   *   
   * *    
    *     
   * *    
  *   *   
 *     *  

import java.util.Scanner;
class Pat3 
{
	public static void main(String[] args) 
	{
		int i,j,k,num;
		Scanner s= new Scanner(System.in);
		System.out.println("Enter any number:");
		num=s.nextInt();
		i=0;
		while(i<num)
		{
			j=0;
			while(j<=num)
			{
				if(i==j||i+j==num)
				System.out.print("*");
				else
					System.out.print(" ");
				j++;
			}
			System.out.println(" ");
			i++;
			}


	}
}


2---


import java.util.Scanner;
class Pat5
{
	public static void main(String[] args) 
	{
		int i,j,k,l,n;
		Scanner s= new Scanner(System.in);
		System.out.println("enter any number:");
		n=s.nextInt();
		i=n;
		while(i>0)
		{
			j=1;
			while(j<=n-i)
			{
				System.out.print(" ");
				j++;
			}
			k=1;
			while(k<=i)
			{
				System.out.print("*");
				k++;
			}
			 l=1;
			 while(l<i)
			{
				 System.out.print("*");
				 l++;
			}
		      System.out.println();
			  i--;
		}
	}
}



WAP to swap two no with and without 3 variable



import java.util.Scanner;
class Swapping 
{
	public static void main(String[] args) 
	{
		Scanner s=new Scanner(System.in);
		System.out.println("Enter two numbers:");
		int a=s.nextInt();
		int b=s.nextInt();
		swap(a,b);
		swap1(a,b);
	}
	public static void swap(int a, int b) {
		int temp=0;
		temp=a;
		a=b;
		b=temp;
		System.out.println("After swapping:"+a+"  "+b);
	}
	public static void swap1(int a, int b) {
		a=a+b;
		b=a-b;
		a=a-b;
		System.out.println(a+"   "+b);
	}

}



what is the out put of below program


class Xa 
{
	public static void main(String[] args) 
	{
		String[] str=new String[0];
		System.out.println(str[0]);
	}
}



What will be the output of below program?

class Test{

	Integer id;
	Test(int id){
	this.id=id;
	}
	
	public String toString(){
	return this.id.toString();
	}
	
	public static void main(String[] args)
	{
		Test t1 = new Test(1);
		Test t2 = new Test(1);
		
		Map m=new HashMap();
		m.put(t1,1);
		m.put(t2,1);
		System.out.println(m);//{1=1, 1=1} as t1 and t2 are objects and not premitive so its different
		}
	}
	
	
What will be the output of below code?

	public class Test {
	
	Integer id;
	Test(int id){
	this.id=id;
	}
	
	public String toString(){
	return this.id.toString();
	}
	
	public int hashCode() {
		int result =1;
		result=31+((id==null)?0:id.hashCode());
		return result;
	}
	
	public boolean equals(Test obj) {
		return this.id.equals(((Test)obj).id);
	}

	public static void main(String[] args) {
		TreeSet s =new TreeSet();
		Test t1 = new Test(1);
		Test t2 = new Test(2);
		s.add(t1);
		s.add(t2);
		System.out.println(s.size());
		Iterator itr=s.iterator();
		while(itr.hasNext()) {
			System.out.println(itr.next());
		}
	}
}
	Output--> ClassCastException --class Test cannot be cast to class java.lang.Comparable
	

What will be the output of below code?

public class Test {	
	Integer id;
	Test(int id){
	this.id=id;
	}	
	public String toString(){
	return this.id.toString();
	}	
	public static void main(String[] args) {
		Map m =new HashMap();
		Test t1 = new Test(1);
		Test t2 = new Test(1);
		m.put(t1,1);
		m.put(t2,1);
		System.out.println(m.size());//2
		Set s=m.keySet();
		Iterator itr=s.iterator();
		while(itr.hasNext()) {
			System.out.println(itr.next());//1	1
		}}} 


What will be the output of below code?

	public class Test {
		
		public static void main(String[] args) {
			List l= new ArrayList<>();
			Test t1= new Test();
			Test t2= new Test();
			l.add(t1);
			l.add(t2);
			Collections.sort(l);
			for(int  i=0;i<l.size();i++)
				System.out.println(l.get(i));
		}
	}
Output--java.lang.ClassCastException: class Test cannot be cast to class java.lang.Comparable

What will be the output of below code?	
	public class Test {
		public static void main(String[] args) {
			String s1="xyx";
			String s2= new String("xyx");
			System.out.println(s1==s2);//False
			s2.intern();
			System.out.println(s1==s2);//False
		}}
		
What will be the output of below code?	
	
	public class Test {
	static String s="Instance";
	public static void method(String s) {
		s+="Add";
		}
	public static void main(String[] args) {
		Test t=new Test();
		s="New Instance";
		String s="Local";
		method(s);
		System.out.println(s);//Local
		System.out.println(t.s);// New Instance
	}}

What will be the output of below code?	

	public class Test {
		public static void main(String[] args) {
			String s1="Manish";
			String s2="Manish Kumar";
			System.out.println(s1.compareTo(s2));//-6
		}}

What will be the output of below code?
	public class Test {
		public static void main(String[] args) {
			if("String".endsWith("")) 
				System.out.println(true);
			else
				System.out.println(false);
		}}//output--True


