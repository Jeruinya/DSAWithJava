package com.scaler.dsa.java.sequence;
/*
print all the subsequences of an array [1,2,3]

Subsequnces:   A sequence generated by deleting 0 or more elements from the array. where order is importance and not being continuous if fine.
Every subarray is subsequence but not vice versa
[] empty array is subsequence but not subarray as in subarrays there should be starting and end element even same starting and end index is fine.

Total number of subarrays =n*(n+1)/2
Total number of subsequences= 2^n
[1,2,3]---[],[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3]   , here [3,2] is not a subsequence because order does not matched

Subset--->They are similar to subsequences except one difference that is in subsequence order matters but in subset it does not.
A[1,2,3]---[],[1],[2],[3],[2,1],[3,1],[2,3]--here order does not matters

 */
import java.util.ArrayList;

public class PrintAllTheSubsequences {

	public static void main(String[] args) {
		int A[] = { 1, 2, 3 };
		printSubsequences(A);

	}

	private static void printSubsequences(int[] A) {
		int n = A.length;
		for (int i = 1; i < Math.pow(2, n); i++) {
			ArrayList<Integer> list = new ArrayList<>();
			for (int j = 0; j < n; j++) {
				if ((i & (1 << j)) != 0)
					list.add(A[j]);
			}
			System.out.println(list);
		}

	}

}
